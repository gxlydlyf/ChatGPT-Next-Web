name: 上游同步

permissions:
  contents: write

on:
  schedule:
    - cron: "0 0 * * *" # 每天
  workflow_dispatch: # 允许手动触发

jobs:
  sync_latest_from_upstream:
    name: Sync latest commits from upstream repo
    runs-on: ubuntu-latest
    if: ${{ github.event.repository.fork }}

    steps:
      # 步骤 1：运行标准 checkout 操作
      - name: Checkout target repo
        uses: actions/checkout@v3

      # 第 2 步：运行 sync 操作
      - name: Sync upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
        with:
          upstream_sync_repo: ChatGPTNextWeb/ChatGPT-Next-Web
          upstream_sync_branch: main
          target_sync_branch: main
          target_repo_token: ${{ secrets.GITHUB_TOKEN }} # 自动生成，无需设置
          test_mode: false

      # 第 3 步：检查是否同步成功
      - name: Sync check
        if: failure()
        run: |
          echo "[Error] 由于上游仓库的 workflow 文件变更，导致 GitHub 自动暂停了本次自动更新，你需要手动 Sync Fork 一次，详细教程请查看：https://github.com/Yidadaa/ChatGPT-Next-Web/blob/main/README_CN.md#%E6%89%93%E5%BC%80%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0"
          exit 1

      # 第 4 步：添加自己的代码更改
      - name: Add custom changes
        run: |
          # 设置 Git 用户信息
          git config --global user.email "mail@9lf.top"
          git config --global user.name "gxlydlyf"
          
          # 更改CSS
          echo "
          div, button, select, a, input, span {
            -webkit-tap-highlight-color: transparent;
          }" >> app/styles/globals.scss
          
          # 更改 子标题
          sed -i 's/Build your own AI assistant./免费 GPT-4o-mini 聊天机器人/g' app/components/sidebar.tsx
          
          # 更改 默认api
          sed -i 's|/api/openai/|https://api.9lf.top/|g' app/store/access.ts
                    
          # 更改 默认模型
          sed -i 's/model: ".*"/model: "gpt-4o-mini"/' app/store/config.ts
          
          # 更改 max_tokens
          sed -i 's/max_tokens: [0-9]\+/max_tokens: 1280000/' app/store/config.ts
          sed -i 's/compressMessageLengthThreshold: [0-9]\+/compressMessageLengthThreshold: 1280000/' app/store/config.ts
          
          # 更改 historyMessageCount
          sed -i 's/historyMessageCount: [0-9]\+/historyMessageCount: 64/' app/store/config.ts
          
          # 关闭历史摘要
          sed -i 's/sendMemory: true/sendMemory: false/' app/store/config.ts
          
          # 更改 主题
          # light
          sed -i '/@mixin light/,/}/s/--primary: .*;/--primary: rgb(243, 140, 0);/' app/styles/globals.scss
          sed -i '/@mixin light/,/}/s/--second: .*;/--second: rgb(255,216,164);/' app/styles/globals.scss
          # dark
          sed -i '/@mixin dark/,/}/s/--primary: .*;/--primary: rgb(171, 111, 29);/' app/styles/globals.scss
          sed -i '/@mixin dark/,/}/s/--second: .*;/--second: rgb(42, 34, 27);/' app/styles/globals.scss
          
          # 更改 注入系统提示词
          sed -i 's/Knowledge cutoff: [^ ]*/知识截止: 未知/' app/constant.ts
          sed -i 's/You are ChatGPT, a large language model trained by OpenAI./你是 ChatGPT，一个由 OpenAI 训练的大型语言模型。/' app/constant.ts
          sed -i 's/Current model/当前模型/' app/constant.ts
          sed -i 's/Current time/当前时间/' app/constant.ts
          
          # 始终为最新版本
          sed -i 's/const hasNewVersion = .*;/const hasNewVersion = false;/' app/components/settings.tsx
          
          # 添加所有更改
          git add *
          
          # 提交更改
          git commit -m "与上游同步后添加我的自定义更改"

      # 第 5 步：推送更改到自己的远程仓库
      - name: Push custom changes
        run: |
          git push origin main # 确保这是你要推送的分支
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 提供的 token
